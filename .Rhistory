#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
glmdata$s
glmdata
data.frame(glmdata)
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$dt <- rdata%>%
group_by(times,location) %>%
summarize(avdiff = c(-1,(tail(times,-1)-head(times,-1))))
#2. cases per interval
#3. number of infectious individual at start interval
group.data$i <- rdata%>%
group_by(times,location) %>%
summarise(sum(sir == 2))
#4. number of susceptible individuals at start interval
group.data$s <- rdata%>%
group_by(times,location) %>%
summarise(sum(sir == 0))
#5. number of recovered individuals at start of interval
group.data$r <- rdata%>%
group_by(times,location) %>%
summarise(sum(sir == 3))
#6. covariates of the group
return(group.data)
}
data.frame(glmdata)
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
data.frame(glmdata)
data.frame(glmdata)$dt
names(data.frame(glmdata))
data.frame(glmdata)dt.avdiff
data.frame(glmdata)$dt.avdiff
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$dt <- rdata%>%
group_by(location,times) %>%
summarize(avdiff = c(-1,(tail(times,-1)-head(times,-1))))
#2. cases per interval
#3. number of infectious individual at start interval
group.data$i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
#4. number of susceptible individuals at start interval
group.data$s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
#5. number of recovered individuals at start of interval
group.data$r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
data.frame(glmdata)$dt.avdiff
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$times <- rdata%>%
group_by(location,times) %>%
summarize(mean(times)))
#2. cases per interval
#3. number of infectious individual at start interval
group.data$i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
#4. number of susceptible individuals at start interval
group.data$s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
#5. number of recovered individuals at start of interval
group.data$r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
data.frame(glmdata)$dt.avdiff
names(glmdata)
names(data.frame(glmdata))
data.frame(glmdata)$dt.avdiff
rm(glmdata)
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
names(data.frame(glmdata))
data.frame(glmdata)$dt.avdiff
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$times <- rdata%>%
group_by(location,times) %>%
summarize(mean(times))
#2. cases per interval
#3. number of infectious individual at start interval
group.data$i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
#4. number of susceptible individuals at start interval
group.data$s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
#5. number of recovered individuals at start of interval
group.data$r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
names(data.frame(glmdata))
data.frame(glmdata)$times.mean.times
data.frame(glmdata)
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$times <- rdata%>%
group_by(location,times) %>%
summarize(mean(times))
group.data$dt <-group.data%>%
group_by(times.location)%>%
summarize(c(-1,tail(times)-head(times)))
#2. cases per interval
#3. number of infectious individual at start interval
group.data$i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
#4. number of susceptible individuals at start interval
group.data$s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
#5. number of recovered individuals at start of interval
group.data$r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$times <- rdata%>%
group_by(location,times) %>%
summarize(mean(times))
group.data$dt <-data.frame(group.data)%>%
group_by(times.location)%>%
summarize(c(-1,tail(times)-head(times)))
#2. cases per interval
#3. number of infectious individual at start interval
group.data$i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
#4. number of susceptible individuals at start interval
group.data$s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
#5. number of recovered individuals at start of interval
group.data$r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
group.data
data.frame(group.data)
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$times <- rdata%>%
group_by(location,times) %>%
summarize(mean(times))
group.data$dt <-data.frame(group.data)%>%
group_by(times.location)%>%
summarize(c(-1,tail(times.mean.times)-head(times.mean.times)))
#2. cases per interval
#3. number of infectious individual at start interval
group.data$i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
#4. number of susceptible individuals at start interval
group.data$s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
#5. number of recovered individuals at start of interval
group.data$r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
data.frame(group.data)
data.frame(group.data)%>%
group_by(times.location)
data.frame(group.data)%>%
group_by(times.location)%>%
summarize(c(-1,tail(times.mean.times.)-head(times.mean.times.)))
tail(times.mean.times.)
data.frame(group.data)%>%
group_by(times.location)%>%
tail(times.mean.times.)
data.frame(group.data)%>%
group_by(times.location)%>%
summarize(c(-1,tail(times.mean.times.,-1)-head(times.mean.times.,-1)))
source("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
names(data.frame(glmdata))
data.frame(glmdata)$times.mean.times
data.frame(glmdata)
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$times <- rdata%>%
group_by(location,times) %>%
summarize(mean(times))
group.data$dt <-data.frame(group.data)%>%
group_by(times.location)%>%
summarize(dt = c(-1,tail(times.mean.times.,-1)-head(times.mean.times.,-1)))
#clean up
group.data <- data.frame(group.data)[c("times.location","times.mean.times.","dt"),];
#2. cases per interval
#3. number of infectious individual at start interval
group.data$i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
#4. number of susceptible individuals at start interval
group.data$s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
#5. number of recovered individuals at start of interval
group.data$r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
data.frame(glmdata)
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
group.data
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
group.data
data.frame(group.data)
data.frame(group.data)[c("times.location","times.mean.times.","dt.dt"),];
data.frame(group.data)[,c("times.location","times.mean.times.","dt.dt")]
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
i[,-1]
data.frame(i)[,-1]
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
i
rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
i
rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
data.frame(i)[,-1]
group.data$i <- data.frame(i)[,-1]
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
rdata%>%
group_by(id)
rdata
rdata%>%
group_by(id) %>%
arrange(times)
rdata%>%
arrange(times)%>%
group_by(id)
rdata%>%
arrange(times)%>%
filter(id==1)
rdata%>%
arrange(times)%>%
filter(id==2)
rdata%>%
arrange(times)%>%
filter(id==3)
rdata%>%
arrange(times)%>%
filter(id==4)
rdata%>%
arrange(times)%>%
filter(id==5)
rdata%>%
arrange(times)%>%
filter(id==5) %>%
summarize(case = head(sir,-1)==0 )
rdata%>%
arrange(times)%>%
filter(id==5) %>%
summarize(case = head(sir,-1)==0 & tail(sir,-1)>0)
rdata%>%
arrange(times)%>%
filter(id==5) %>%
summarize(case = as.numeric(head(sir,-1)==0 & tail(sir,-1)>0))
#2. cases per interval
indiv.cases <- rdata%>%
arrange(times)%>%
filter(id==6) %>%
summarize(case = as.numeric(head(sir,-1)==0 & tail(sir,-1)>0))
#2. cases per interval
indiv.cases <- rdata%>%
arrange(times)%>%
filter(id==6) %>%
summarize(case = as.numeric(head(sir,-1)==0 & tail(sir,-1)>0))
rdata%>%
arrange(times)%>%
filter(id==6) %>%
summarize(case = as.numeric(head(sir,-1)==0 & tail(sir,-1)>0))
rdata%>%
arrange(times)%>%
filter(id==7) %>%
summarize(case = as.numeric(head(sir,-1)==0 & tail(sir,-1)>0))
rdata%>%
arrange(times)%>%
group_by(id) %>%
summarize(case = c(0,as.numeric(head(sir,-1)==0 & tail(sir,-1)>0)));
#2. cases per interval
indiv.cases <- rdata%>%
arrange(times)%>%
group_by(id) %>%
summarize(case = c(0,as.numeric(head(sir,-1)==0 & tail(sir,-1)>0)));
indiv.cases
data.frame(indiv.cases)
#2. cases per interval
indiv.cases <- rdata%>%
arrange(times)%>%
group_by(id) %>%
summarize(
times = times,
case = c(0,as.numeric(head(sir,-1)==0 & tail(sir,-1)>0)));
indiv.cases
#2. cases per interval
indiv.cases <- rdata%>%
arrange(times)%>%
group_by(id) %>%
summarize(
location = location,
times = times,
case = c(0,as.numeric(head(sir,-1)==0 & tail(sir,-1)>0)));
indiv.cases
debugSource("C:/Surfdrive/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/summer-fair/src/R/LocalAlgorithm.R", echo=TRUE)
glmdata
names(data.frame(glmdata))
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$times <- rdata%>%
group_by(location,times) %>%
summarize(mean(times))
group.data$dt <-data.frame(group.data)%>%
group_by(times.location)%>%
summarize(dt = c(-1,tail(times.mean.times.,-1)-head(times.mean.times.,-1)))
#clean up
group.data <- data.frame(group.data)[,c("times.location","times.mean.times.","dt.dt")];
names(group.data)<- c("location","times","dt");
#2. cases per interval
indiv.cases <- rdata%>%
arrange(times)%>%
group_by(id) %>%
summarize(
location = location,
times = times,
case = c(0,as.numeric(head(sir,-1)==0 & tail(sir,-1)>0)));
cases   <- indiv.cases%>%
group_by(location,times) %>%
summarise(sum(case))
group.data$cases<- data.frame(cases)[,-1]
#3. number of infectious individual at start interval
i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
group.data$i <- data.frame(i)[,-1]
#4. number of susceptible individuals at start interval
s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
group.data$s <- data.frame(s)[,-1]
#5. number of recovered individuals at start of interval
r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
group.data$r <- data.frame(r)[,-1]
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
names(data.frame(glmdata))
data.frame(glmdata)
names(data.frame(glmdata))
head(glmdata)
head(data.frame(glmdata))
head(data.frame(glmdata))
##arrange data for specific method####
arrangeData <- function(data,
rule,
id.vars,
method = "glm",
...){
return(eval(parse(text = paste0("arrangeData.", method)))(applyRule(data,rule,...)))
}
arrangeData.glm<-function(rdata){
#for a standard glm approach requires
group.data <- NULL;
#1. time intervals (length)
group.data$times <- rdata%>%
group_by(location,times) %>%
summarize(mean(times))
group.data$dt <-data.frame(group.data)%>%
group_by(times.location)%>%
summarize(dt = c(-1,tail(times.mean.times.,-1)-head(times.mean.times.,-1)))
#clean up
group.data <- data.frame(group.data)[,c("times.location","times.mean.times.","dt.dt")];
names(group.data)<- c("location","times","dt");
#2. cases per interval
indiv.cases <- rdata%>%
arrange(times)%>%
group_by(id) %>%
summarize(
location = location,
times = times,
case = c(0,as.numeric(head(sir,-1)==0 & tail(sir,-1)>0)));
cases   <- indiv.cases%>%
group_by(location,times) %>%
summarise(sum(case))
group.data$cases<- data.frame(cases)[,-1]
#3. number of infectious individual at start interval
i <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 2))
group.data$i <- data.frame(i)[,-1]
#4. number of susceptible individuals at start interval
s <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 0))
group.data$s <- data.frame(s)[,-1]
#5. number of recovered individuals at start of interval
r <- rdata%>%
group_by(location,times) %>%
summarise(sum(sir == 3))
group.data$r <- data.frame(r)[,-1]
#6. covariates of the group
return(group.data)
}
glmdata <- arrangeData(mockdata,
rule.sincefirstinfectioustestrecovered,
var.id = tail(names(mockdata),3),
infrec = list(inf=c(2),rec=c(3)) )
names(data.frame(glmdata))
head(data.frame(glmdata))
names(data.frame(glmdata))
